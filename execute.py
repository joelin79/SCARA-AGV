#!/usr/bin/env python3
"""
Execute the SCARA Object Detection_Models System
Run this script to start the automated object detection and coordinate transformation
"""

from Detection_Models.ObjectDetection import SCARAObjectDetection

def main():
    print("SCARA AGV Object Detection_Models System")
    print("=" * 50)
    
    # Initialize the detection system
    detector = SCARAObjectDetection(
        model_path="yolo/my_model/my_model.pt",
        confidence_threshold=0.4,  # Lower threshold for better detection
        camera_height=300.0        # 30cm camera height
    )
    
    try:
        # Perform workspace scan and detection
        print("Starting automated workspace scan...")
        detected_objects = detector.scan_workspace_and_detect_objects(
            camera_index=0,  # Change to 1 if using external USB camera
            grid_size=3      # 3x3 grid (9 positions) for comprehensive coverage
        )
        
        # Store and display results
        detector.detected_objects = detected_objects
        detector.print_detection_results()
        
        # Save coordinates for the arm control system
        if detected_objects:
            coords = detector.get_object_coordinates_list()
            
            # Save to multiple formats for convenience
            with open("object_coordinates.txt", "w") as f:
                f.write("# Object coordinates in SCARA arm coordinate system (mm)\n")
                f.write("# Format: x, y, z\n")
                for i, (x, y, z) in enumerate(coords):
                    f.write(f"{x:.1f}, {y:.1f}, {z:.1f}  # Object {i+1}\n")
            
            # Also save as Python list for easy import
            with open("object_coordinates.py", "w") as f:
                f.write("# Object coordinates for SCARA arm\n")
                f.write("# Automatically generated by ObjectDetection system\n\n")
                f.write("object_coordinates = [\n")
                for x, y, z in coords:
                    f.write(f"    ({x:.1f}, {y:.1f}, {z:.1f}),\n")
                f.write("]\n")
            
            print(f"\nResults saved:")
            print(f"  - object_coordinates.txt (human readable)")
            print(f"  - object_coordinates.py (Python import)")
            print(f"  - Detection_Models images in detections_output/")
            
        else:
            print("No objects detected. Check camera connection and object visibility.")
            
    except KeyboardInterrupt:
        print("\n\nScan interrupted by user (Ctrl+C)")
        print("Partial results may be available in detections_output/")
        
    except Exception as e:
        print(f"\nError during detection: {e}")
        print("Check camera connection, model path, and arm communication.")

if __name__ == "__main__":
    main()